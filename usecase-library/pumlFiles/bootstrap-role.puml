@startuml

!define Swimlane1

box "ODA Operations \n OAuth_client/relying party"
    actor BusinessAdmin
    actor Operations
end box


box "ODA Component"
    entity Component
    participant "Component Implementation" as ComponentImplementation
end box
box "ODA Canvas"
    participant "Canvas Resource Inventory API"
end box

box "ODA Canvas \nAuthentication-identity \nAuthorization server"
    participant "Identity Operator/Handler" as identityOperator
    participant "Secret store" as SecretStore
    participant "Identity Management System" as IDM
end box



group Bootstrap
"Canvas Resource Inventory API" <- Operations : Install
Component <- "Canvas Resource Inventory API" : Install
Component -> ComponentImplementation : Install
ComponentImplementation -> ComponentImplementation: Create Admin role

Component -> identityOperator: on.create 
identityOperator -> IDM: Create system user for component
note right
    This is a system-generated user (uuid) that is used then
    the component makes API calls (to another component or
    canvas service).
end note
identityOperator <- IDM: Return clientId and secret
identityOperator -> SecretStore: Update with clientId and secret

identityOperator -> ComponentImplementation: Register identityOperator to permissionSpecificationSet events
identityOperator -> IDM: Register component

identityOperator -> ComponentImplementation : Query bootstrap Admin role
identityOperator -> IDM: create Role in IDM
identityOperator -> IDM: Assign seccon user to Admin role

end 
group Normal business operations

BusinessAdmin -> Component: Create Role
Component-> identityOperator: permissionSpecificationSetCreationNotification event
identityOperator -> IDM: create Role in IDM
Operations->IDM  : Maintain user identities
BusinessAdmin -> Component: Update Role
Component-> identityOperator: permissionSpecificationSetAttributeValueChangeNotification event
identityOperator -> IDM: Update Role in IDM
Operations->IDM  : Maintain user identities
BusinessAdmin -> Component: Delete Role
Component-> identityOperator: permissionSpecificationSetDeletionNotification event
identityOperator -> IDM: Delete Role in IDM

end
group Uninstall
Operations -> Component  : Uninstall
Component -> identityOperator: on.delete 
identityOperator -> IDM: Delete component and all roles
end

@enduml