@startuml

!define Swimlane1

box "ODA Operations \n OAuth_client/relying party"
    actor BusinessAdmin
    actor Operations
end box


box "ODA Component"
    entity Component
    participant "Component Implementation" as ComponentImplementation
end box
box "ODA Canvas"
    participant "Canvas Resource Inventory API"
end box

box "ODA Canvas \nAuthentication-identity \nAuthorization server"
    participant "Canvas openid-connect" as S1
    participant "Identity Operator/Handler" as identityOperator
    participant "Secret store" as SecretStore
    participant "Identity Management System" as IDM
end box



group Bootstrap
"Canvas Resource Inventory API" <- Operations : Install
Component <- "Canvas Resource Inventory API" : Install
Component -> ComponentImplementation : Install
ComponentImplementation -> ComponentImplementation: Create Admin role

group openid-connect discovery
note right of ComponentImplementation
    The well-known DNS for  openid-connect service is set to 'openid-connect.canvas'
    The well-known realm for ODA is set to '<realm'
end note
ComponentImplementation -> S1++: GET https://openid-connect.canvas/realms/<realm>/.well-known/openid-configuration
return openid-configuration
end group

group openid-connect dynamic client registration
ComponentImplementation -> S1++: POST http://openid-connect.canvas/realms/<realm>/clients-registrations/openid-connect
return client_id, client_secret
end group

Component -> identityOperator: on.create 

identityOperator -> ComponentImplementation: Register identityOperator to permissionSpecificationSet events

identityOperator -> ComponentImplementation : Query bootstrap Admin role
identityOperator -> IDM: create Role in IDM
identityOperator -> IDM: Assign seccon user to Admin role

end 
group Normal business operations

BusinessAdmin -> Component: Create Role
Component-> identityOperator: permissionSpecificationSetCreationNotification event
identityOperator -> IDM: create Role in IDM
Operations->IDM  : Maintain user identities
BusinessAdmin -> Component: Update Role
Component-> identityOperator: permissionSpecificationSetAttributeValueChangeNotification event
identityOperator -> IDM: Update Role in IDM
Operations->IDM  : Maintain user identities
BusinessAdmin -> Component: Delete Role
Component-> identityOperator: permissionSpecificationSetDeletionNotification event
identityOperator -> IDM: Delete Role in IDM

end
group Uninstall
Operations -> Component  : Uninstall
Component -> identityOperator: on.delete 
identityOperator -> IDM: Delete component and all roles
end

@enduml
